security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        App\Entity\User: # je definit quelle entité sera a encodé (note c'est ici que getPassword est obligatoire)
            algorithm: bcrypt # attention argon2i remplacera sous peu cette methode
            
    providers:
        in_memory: { memory: ~ }
        app_provider:
            entity:
                class: App\Entity\User
                property: username


    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: true
            provider: app_provider
            guard:
                authenticators:
                    - App\Security\AppAuthentificatorAuthenticator
            logout:
                path: app_logout # ATTENTION : une route dans routes.yml doit être créée 

            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^\/application, roles: ROLE_USER }
        - { path: ^\/admin, roles: ROLE_ADMIN }

    role_hierarchy:
        ROLE_ADMIN: ROLE_MODERATOR
        ROLE_MODERATOR: ROLE_USER
